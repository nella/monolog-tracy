<?xml version="1.0" encoding="utf-8"?>
<project name="Monolog Tracy" default="build">
	<property name="path.build" value="${project.basedir}/build"/>
	<property name="path.build.properties.local" value="${path.build}/build.local.properties"/>

	<property file="${path.build.properties.local}"/>

	<property name="path.bin" value="${path.root}/bin"/>
	<property name="path.composer.executable" value="composer"/>
	<property name="path.phpcs.executable" value="${path.bin}/phpcs"/>
	<property name="path.phpcs.ruleset" value="${path.vendor}/nella/coding-standard/Nella/ruleset.xml"/>
	<property name="path.phplint.executable" value="${path.bin}/parallel-lint"/>
	<property name="path.phpunit.configuration" value="${path.tests}/phpunit.xml"/>
	<property name="path.phpunit.executable" value="${path.bin}/phpunit"/>
	<property name="path.phpstan.executable" value="${path.bin}/phpstan"/>
	<property name="path.phpstan.configuration" value="${path.build}/phpstan.neon"/>
	<property name="path.root" value="${project.basedir}"/>
	<property name="path.src" value="${path.root}/src"/>
	<property name="path.tests" value="${path.root}/tests"/>
	<property name="path.vendor" value="${path.root}/vendor"/>

	<target name="build" depends="
		composer,
		check
	"/>

	<target name="ci-build" depends="
		composer-validate,
		check
	"/>

	<target name="check" depends="
		phplint,
		cs,
		phpstan,
		tests
	"/>

	<target name="composer" depends="composer-validate">
		<exec
			executable="${path.composer.executable}"
			logoutput="true"
			passthru="true"
			checkreturn="true"
		>
			<arg value="install"/>
		</exec>
	</target>

	<target name="composer-validate">
		<exec
			executable="${path.composer.executable}"
			logoutput="true"
			passthru="true"
			checkreturn="true"
		>
			<arg value="validate"/>
			<arg value="--no-check-lock"/>
		</exec>
	</target>

	<target name="phplint">
		<exec
			executable="${path.phplint.executable}"
			logoutput="true"
			passthru="true"
			checkreturn="true"
		>
			<arg path="${path.src}"/>
			<arg path="${path.tests}"/>
		</exec>
	</target>

	<target name="cs">
		<exec
			executable="${path.phpcs.executable}"
			logoutput="true"
			passthru="true"
			checkreturn="true"
		>
			<arg value="--standard=${path.phpcs.ruleset}"/>
			<arg value="--extensions=php"/>
			<arg value="--encoding=utf-8"/>
			<arg value="-sp"/>
			<arg path="${path.src}"/>
			<arg path="${path.tests}"/>
		</exec>
	</target>

	<target name="phpstan">
		<php expression="PHP_VERSION_ID >= 70000 ? 'true' : 'false'" returnProperty="isPHP7" level="verbose" />
		<if>
			<equals arg1="${isPHP7}" arg2="true" />
			<then>
				<exec
					executable="${path.phpstan.executable}"
					logoutput="true"
					passthru="true"
					checkreturn="true"
				>
					<arg value="analyse"/>
					<arg value="-c"/>
					<arg path="${path.phpstan.configuration}"/>
					<arg path="${path.src}"/>
					<arg path="${path.tests}"/>
				</exec>
			</then>
			<else>
				<echo message="PHPStan requires PHP 7." />
			</else>
		</if>
	</target>

	<target name="tests">
		<exec
			executable="${path.phpunit.executable}"
			logoutput="true"
			passthru="true"
			checkreturn="true"
		>
			<arg value="--configuration"/>
			<arg value="${path.phpunit.configuration}"/>
		</exec>
	</target>
</project>
